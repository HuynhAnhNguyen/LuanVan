@model LuanVan.Areas.Store.Models.RegisterModel
@using LuanVan.Models;
@{
    Layout = null;
}
<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>Đăng kí</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/css/bootstrap.min.css" rel="stylesheet" crossorigin="anonymous">
    <link rel="icon" type="image/png" sizes="16x16" href="~/images/ishop.png">
    <link href="~/css/styless.css" rel="stylesheet">
</head>
<body>
    <div class="row justify-content-center">
        <div class="col-lg-5 col-md-6 col-10">
            <div class="card shadow border-0 rounded-lg mt-5">
                <div class="card-header"><h3 class="text-center font-weight-light my-4">Đăng kí</h3></div>
                <div class="card-body">
                    @using (Html.BeginForm())
                    {
                        @Html.AntiForgeryToken()
                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                        ;
                        <fieldset>
                            @*Họ*@
                            <div class="form-floating">
                                @Html.TextBoxFor(model => model.HoKhachHang,
                            new
                            {
                            @id = "HoKhachHang",
                            @class = "form-control",
                            @placeholder = "Họ khách hàng",
                            @autofocus = "autofocus"
                            })
                                <label for="HoKhachHang">Họ lót <span class="text-danger">*</span></label>
                            </div>
                            @Html.ValidationMessageFor(model => model.HoKhachHang, "", new { @class = "text-danger p-2" })

                            @*Tên*@
                            <div class="form-floating">
                                @Html.TextBoxFor(model => model.TenKhachHang,
                            new
                            {
                            @id = "TenKhachHang",
                            @class = "form-control",
                            @placeholder = "Tên khách hàng",
                            @autofocus = "autofocus"
                            })
                                <label for="TenKhachHang">Tên <span class="text-danger">*</span></label>
                            </div>
                            @Html.ValidationMessageFor(model => model.TenKhachHang, "", new { @class = "text-danger p-2" })

                            @*Ngày sinh*@
                            <div class="form-floating">
                                
                               @* <input asp-for="NgaySinh" class="form-control"/>*@

                                <input type="date" name="NgaySinh" class="form-control" >

                                <label for="NgaySinh">Ngày sinh <span class="text-danger">*</span></label>
                            </div>
                            <span asp-validation-for="NgaySinh" class="text-danger p-2"></span>
                            

                            @*Giới tính*@
                            <div class="form-floating">
                                
                                <select id="GioiTinh" name="GioiTinh" class="form-control">
                                    <option value="Nam">Nam</option>
                                    <option value="Nữ">Nữ</option>
                                </select>
                                <label for="GioiTinh">Giới tính <span class="text-danger">*</span></label>
                                
                            </div>
                            <span asp-validation-for="GioiTinh" class="text-danger p-2"></span>

                            @*Số điện thoại*@
                            <div class="form-floating">
                                @Html.TextBoxFor(model => model.SoDienThoai,
                            new
                            {
                            @id = "SoDienThoai",
                            @class = "form-control",
                            @placeholder = "Số điện thoại",
                            @autofocus = "autofocus"
                            })
                                <label for="SoDienThoai">Số điện thoại <span class="text-danger">*</span></label>
                            </div>
                            @Html.ValidationMessageFor(model => model.SoDienThoai, "", new { @class = "text-danger p-2" })

                            @*Email*@
                            <div class="form-floating">
                                @Html.TextBoxFor(model => model.Email,
                            new
                            {
                            @id = "Email",
                            @class = "form-control",
                            @placeholder = "Email",
                            @autofocus = "autofocus"
                            })
                                <label for="Email">Email <span class="text-danger">*</span></label>
                            </div>
                            @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger p-2" })

                            @*Địa chỉ*@
                            <div class="form-floating">
                                @Html.TextBoxFor(model => model.DiaChi,
                            new
                            {
                            @id = "DiaChi",
                            @class = "form-control",
                            @placeholder = "Địa chỉ",
                            @autofocus = "autofocus"
                            })
                                <label for="DiaChi">Địa chỉ<span class="text-danger">*</span></label>
                            </div>
                            @Html.ValidationMessageFor(model => model.DiaChi, "", new { @class = "text-danger p-2" })

                            @*Mật khẩu*@
                            <div class="form-floating">
                                @Html.TextBoxFor(model => model.MatKhau,
                            new
                            {
                            @id = "MatKhau",
                            @class = "form-control",
                            @placeholder = "Password",
                            @type = "password"
                            })
                                <label for="MatKhau">Mật khẩu <span class="text-danger">*</span></label>
                            </div>
                            @Html.ValidationMessageFor(model => model.MatKhau, "", new { @class = "text-danger p-2" })

                            @*Mật khẩu 2*@
                            <div class="form-floating">
                                @Html.TextBoxFor(model => model.MatKhau2,
                            new
                            {
                            @id = "MatKhau2",
                            @class = "form-control",
                            @placeholder = "Password",
                            @type = "password"
                            })
                                <label for="MatKhau2">Xác nhận mật khẩu <span class="text-danger">*</span></label>
                            </div>
                            @Html.ValidationMessageFor(model => model.MatKhau2, "", new { @class = "text-danger p-2" })
                            <div class="d-flex align-items-center justify-content-between mt-1 mb-0">
                                <button type="submit" class="btn btn-success mx-auto">Đăng kí</button>
                            </div>
                        </fieldset>
                    }
                </div>
            </div>
        </div>
    </div>
    @*<script>
        function checkEmail(e){
            $.ajax({
                type: "POST",
                url: "/Store/Login/CheckEmail",
                data: { email: e.Email },
                success: function (response) {
                    if (response.emailExists) {
                        alert("Email đã tồn tại");
                    } else {
                        alert("Email chưa tồn tại");
                    }
                }
            });
        }


    </script>*@
    @await Component.InvokeAsync("NToastNotify")

</body>
</html>
